import groovy.json.JsonSlurper
import groovy.json.JsonOutput

plugins {
	id 'fabric-loom' version '0.6-SNAPSHOT'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

minecraft {
}

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

	modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// Dependencies
	modImplementation "io.github.cottonmc:LibGui:${project.libgui_version}"
	include "io.github.cottonmc:LibGui:${project.libgui_version}"

	//It's how Spice of Fabric does it idk
	include "${project.tweed_maven}:${project.tweed_version}"
	modImplementation ("${project.tweed_maven}:${project.tweed_version}") {
		exclude group: ("net.fabricmc.fabric-api")
		exclude module: "modmenu"
		exclude module: "config-2"
		exclude module: "basic-math"
	}

	//modImplementation "io.github.Linguardium:WanderingTradesmen:${project.tradesment_version}"
	//include "io.github.Linguardium:WanderingTradesmen:${project.tradesment_version}"
}

processResources {
	inputs.property "version", project.version

	from(sourceSets.main.resources.srcDirs) {
		include "fabric.mod.json"
		expand "version": project.version
	}

	from(sourceSets.main.resources.srcDirs) {
		exclude "fabric.mod.json"
	}
	// Minifies all .json files when building the mod.
	// Source files are not minified, only the jar copies.
	doLast {

		def jsonMinifyStart = System.currentTimeMillis()
		def jsonMinified = 0
		def jsonBytesSaved = 0

		fileTree(dir: outputs.files.asPath, include: '**/*.json').each {

			File file = it
			jsonMinified++
			def oldLength = file.length()
			file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
			jsonBytesSaved += oldLength - file.length()
		}

		println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
	}
}
// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

jar {
	from "LICENSE"
}


repositories {
	maven {
		name = "CottonMC"
		url = "https://server.bbkr.space/artifactory/libs-release"
	}
	maven { url 'https://jitpack.io' }
	maven {
		name = "Siphalor"
		url = "https://maven.siphalor.de/"
	}
}

